;; run via:
;;   bb -m gen-deps-edn/-main

;; TODO
;; https://blog.michielborkent.nl/speeding-up-builds-fs-modified-since.html

(ns gen-deps-edn
  (:require [project-config]
            [clojure.pprint :as pp]
            [clojure.walk :as walk]))

(defn canonicalize-coord [coord]
  {:pre [(symbol? coord)]
   :post [(qualified-symbol? %)]}
  (if (not (namespace coord))
    (symbol (name coord) (name coord))
    coord))

(defn add-classifier [coord classifier]
  {:pre [(qualified-symbol? coord)
         ((some-fn nil? string?) classifier)]
   :post [(qualified-symbol? %)]}
  (if classifier
    (symbol (namespace coord) (str (name coord) "$" classifier))
    coord))

(defn lein->cli-style-deps [dependencies global-exclusions]
  {:pre [(vector? dependencies)]}
  (into (sorted-map)
        (map (fn [[coord version & {:keys [classifier exclusions] :as opts}]]
               (let [coord (-> coord
                               canonicalize-coord
                               (add-classifier classifier))]
                 [coord (cond-> {:mvn/version version}
                          exclusions (assoc :exclusions (mapv canonicalize-coord (concat global-exclusions exclusions))))])))
        dependencies))

;; TODO schema :injections
(defn base-deps-edn []
  (walk/postwalk
    (fn [form]
      (if (map? form)
        (into (sorted-map) form)
        form))
    (sorted-map
      :deps (lein->cli-style-deps project-config/dependencies project-config/global-exclusions)
      :aliases (sorted-map
                 :build {:extra-paths (into ["build-src"] project-config/config-source-paths)
                         :deps {'io.github.clojure/tools.build {:git/tag "v0.7.5" :git/sha "34727f7"}}
                         :ns-default 'build}
                 :cognitest {:extra-deps {'io.github.cognitect-labs/test-runner 
                                          {:git/tag "v0.5.0" :git/sha "b3fd0d2"}}
                             ;; clojure -M:test:cognitest
                             ;:main-opts ["-m" "iroh.dev.cognitest"]
                             ;; clojure -X:test:cognitest
                             :exec-fn 'ctia.dev.cognitest/exec-main}
                 :next-clojure (sorted-map
                                 :extra-deps `{org.clojure/clojure {:mvn/version ~project-config/next-clojure-version}})
                 :test (sorted-map
                         :jvm-opts project-config/global-jvm-opts
                         :extra-deps (lein->cli-style-deps project-config/test-dependencies project-config/global-exclusions)
                         :extra-paths (-> project-config/test-source-paths
                                          (into project-config/test-resource-paths))))
      :paths (-> project-config/source-paths
                 (into project-config/resource-paths))
      #_#_ ;; FIXME doesn't seem to do anything, propagating to :test alias instea
      :jvm-opts project-config/global-jvm-opts)))

(defn spit-deps-edn []
  (spit "deps.edn"
        (binding [*print-length* nil
                  *print-level* nil
                  *print-namespace-maps* nil]
          (with-out-str
            (run! println
                  [";; Generated by scripts/gen_deps_edn.clj"
                   ";; To configure mvn credentials, see the `Authenticating via Clojure CLI` section in docs/Developer.org"])
            (pp/pprint (base-deps-edn))))))

(defn -main [& args]
  (apply spit-deps-edn args))

(when (= *file* (System/getProperty "babashka.file")) (-main))
